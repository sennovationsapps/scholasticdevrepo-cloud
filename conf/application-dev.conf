# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="E27D^[_<Lpt0vjad]de;3/i;tx3gpRmG4Byof/3nahO/dIo9gbsMWut1w3xg[>9W"

# The application languages
# ~~~~~
application.langs="en,de,pl,fr,es,ja"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global=Global

# Router 
# ~~~~~
# Define the Router object to use for this application.
# Default to Routes in the root package.
# application.routers=my.application.Routes

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#

# The JDBC driver to use
db.default.driver=com.mysql.jdbc.Driver

# The JDBC url
db.default.url="jdbc:mysql://mydbinstance.c311qw4nmdlb.us-east-1.rds.amazonaws.com:3306/scdb?characterEncoding=UTF-8"

db.default.identifier=mydbinstance
db.default.dbname=scdb

# User name
db.default.user=scdbuser

# Password
db.default.password=scdbpassword

# Set a connection's default autocommit setting
#db.default.autocommit=true

# Set a connection's default isolation level
db.default.isolation=READ_COMMITTED

# In order to reduce lock contention and thus improve performance, 
# each incoming connection request picks off a connection from a 
# pool that has thread-affinity. 
# The higher this number, the better your performance will be for the 
# case when you have plenty of short-lived threads. 
# Beyond a certain threshold, maintenance of these pools will start 
# to have a negative effect on performance (and only for the case 
# when connections on a partition start running out).
db.default.partitionCount=2

# The number of connections to create per partition. Setting this to 
# 5 with 3 partitions means you will have 15 unique connections to the 
# database. Note that BoneCP will not create all these connections in 
# one go but rather start off with minConnectionsPerPartition and 
# gradually increase connections as required.
db.default.maxConnectionsPerPartition=5

# The number of initial connections, per partition.
db.default.minConnectionsPerPartition=5

# When the available connections are about to run out, BoneCP will 
# dynamically create new ones in batches. This property controls 
# how many new connections to create in one go (up to a maximum of 
# maxConnectionsPerPartition). Note: This is a per-partition setting.
db.default.acquireIncrement=1

# After attempting to acquire a connection and failing, try to 
# connect this number of times before giving up.
db.default.acquireRetryAttempts=10

# How long to wait before attempting to obtain a 
# connection again after a failure.
db.default.acquireRetryDelay=5 seconds

# The maximum time to wait before a call 
# to getConnection is timed out.
db.default.connectionTimeout=1 second

# Idle max age
db.default.idleMaxAge=10 minute

# This sets the time for a connection to remain idle before sending a test query to the DB. 
# This is useful to prevent a DB from timing out connections on its end. 
db.default.idleConnectionTestPeriod=5 minutes

# An initial SQL statement that is run only when 
# a connection is first created.
db.default.initSQL="SELECT 1"

db.default.connectionTestStatement="SELECT 1"

# If enabled, log SQL statements being executed.
db.default.logStatements=false

# The maximum connection age.
db.default.maxConnectionAge=1 hour


# Evolutions
# ~~~~~
# You can disable evolutions if needed
evolutionplugin=disabled

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#
ebean.default="models.*,models.security.*,models.aws.*"

# JPA configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#jpa.default=defaultPersistenceUnit

# Assets configuration
# ~~~~~
"assets.cache./public/stylesheets/bootstrap.min.css"="max-age=3600"

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
#logger=INFO

# Logger used by the framework:
#logger.play=DEBUG

# Logger provided to your application:
#logger.application=DEBUG

#logger.be.objectify=DEBUG

#logger.java.sql=DEBUG

#logger.java.io=DEBUG

base.url="https://sc-elb-1567752920.us-east-1.elb.amazonaws.com/"

mail.debug=true
mail.secured=true

#Virtual Merchant Configuration
gateway.url.keyval="https://demo.myvirtualmerchant.com/VirtualMerchantDemo/process.do"
gateway.url.xml="https://demo.myvirtualmerchant.com/VirtualMerchantDemo/processxml.do"
gateway.ssl.merchantId="006285" 
gateway.ssl.userId="gateway"
gateway.ssl.pin="A21XH0D7ZF7L3OI9310K4R4JBUMJKMKXIIW77F8IT6KHZOT9ZZE9F0CMXOH2MX5H"

#Email Configuration
mail.contactus.default="jntblanton@gmail.com"

#AWS Configuration
#aws.access.key=AKIAJBPTKCZQ5TNKCWWA
#aws.secret.key="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"
aws.s3.bucket="scholasticchallenge-images"
aws.access.key=AKIAJ22BPVE44UNDH2EQ
aws.secret.key="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"

#Default S3 Images
img.root.url="https://scholasticchallenge-files.s3.amazonaws.com"
img.default.hero="https://scholasticchallenge-files.s3.amazonaws.com/images/defaultHeroSlider.jpg"
img.default.profile="https://scholasticchallenge-files.s3.amazonaws.com/images/defaultProfile.jpg"

# Deadbolt
include "play-authenticate/deadbolt.conf"

# SMTP
include "play-authenticate/smtp-dev.conf"

# And play authenticate
include "play-authenticate/mine-dev.conf"

# Configuration for play-easymail for sending mail
include "play-easymail/play-easymail-dev.conf"